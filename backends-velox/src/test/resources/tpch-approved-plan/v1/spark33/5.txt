== Physical Plan ==
AdaptiveSparkPlan (168)
+- == Final Plan ==
   VeloxColumnarToRow (118)
   +- ^ SortExecTransformer (116)
      +- ^ InputIteratorTransformer (115)
         +- VeloxResizeBatches (113)
            +- ShuffleQueryStage (112), Statistics(X)
               +- ColumnarExchange (111)
                  +- VeloxResizeBatches (110)
                     +- ^ RegularHashAggregateExecTransformer (108)
                        +- ^ InputIteratorTransformer (107)
                           +- VeloxResizeBatches (105)
                              +- ShuffleQueryStage (104), Statistics(X)
                                 +- ColumnarExchange (103)
                                    +- VeloxResizeBatches (102)
                                       +- ^ ProjectExecTransformer (100)
                                          +- ^ FlushableHashAggregateExecTransformer (99)
                                             +- ^ ProjectExecTransformer (98)
                                                +- ^ ShuffledHashJoinExecTransformer Inner BuildRight (97)
                                                   :- ^ InputIteratorTransformer (86)
                                                   :  +- VeloxResizeBatches (84)
                                                   :     +- ShuffleQueryStage (83), Statistics(X)
                                                   :        +- ColumnarExchange (82)
                                                   :           +- VeloxResizeBatches (81)
                                                   :              +- ^ ProjectExecTransformer (79)
                                                   :                 +- ^ ShuffledHashJoinExecTransformer Inner BuildRight (78)
                                                   :                    :- ^ InputIteratorTransformer (67)
                                                   :                    :  +- VeloxResizeBatches (65)
                                                   :                    :     +- ShuffleQueryStage (64), Statistics(X)
                                                   :                    :        +- ColumnarExchange (63)
                                                   :                    :           +- VeloxResizeBatches (62)
                                                   :                    :              +- ^ ProjectExecTransformer (60)
                                                   :                    :                 +- ^ ShuffledHashJoinExecTransformer Inner BuildRight (59)
                                                   :                    :                    :- ^ InputIteratorTransformer (48)
                                                   :                    :                    :  +- VeloxResizeBatches (46)
                                                   :                    :                    :     +- ShuffleQueryStage (45), Statistics(X)
                                                   :                    :                    :        +- ColumnarExchange (44)
                                                   :                    :                    :           +- VeloxResizeBatches (43)
                                                   :                    :                    :              +- ^ ProjectExecTransformer (41)
                                                   :                    :                    :                 +- ^ ShuffledHashJoinExecTransformer Inner BuildLeft (40)
                                                   :                    :                    :                    :- ^ InputIteratorTransformer (29)
                                                   :                    :                    :                    :  +- VeloxResizeBatches (27)
                                                   :                    :                    :                    :     +- ShuffleQueryStage (26), Statistics(X)
                                                   :                    :                    :                    :        +- ColumnarExchange (25)
                                                   :                    :                    :                    :           +- VeloxResizeBatches (24)
                                                   :                    :                    :                    :              +- ^ ProjectExecTransformer (22)
                                                   :                    :                    :                    :                 +- ^ ShuffledHashJoinExecTransformer Inner BuildLeft (21)
                                                   :                    :                    :                    :                    :- ^ InputIteratorTransformer (10)
                                                   :                    :                    :                    :                    :  +- VeloxResizeBatches (8)
                                                   :                    :                    :                    :                    :     +- ShuffleQueryStage (7), Statistics(X)
                                                   :                    :                    :                    :                    :        +- ColumnarExchange (6)
                                                   :                    :                    :                    :                    :           +- VeloxResizeBatches (5)
                                                   :                    :                    :                    :                    :              +- ^ ProjectExecTransformer (3)
                                                   :                    :                    :                    :                    :                 +- ^ FilterExecTransformer (2)
                                                   :                    :                    :                    :                    :                    +- ^ ScanTransformer parquet  (1)
                                                   :                    :                    :                    :                    +- ^ InputIteratorTransformer (20)
                                                   :                    :                    :                    :                       +- VeloxResizeBatches (18)
                                                   :                    :                    :                    :                          +- ShuffleQueryStage (17), Statistics(X)
                                                   :                    :                    :                    :                             +- ColumnarExchange (16)
                                                   :                    :                    :                    :                                +- VeloxResizeBatches (15)
                                                   :                    :                    :                    :                                   +- ^ ProjectExecTransformer (13)
                                                   :                    :                    :                    :                                      +- ^ FilterExecTransformer (12)
                                                   :                    :                    :                    :                                         +- ^ ScanTransformer parquet  (11)
                                                   :                    :                    :                    +- ^ InputIteratorTransformer (39)
                                                   :                    :                    :                       +- VeloxResizeBatches (37)
                                                   :                    :                    :                          +- ShuffleQueryStage (36), Statistics(X)
                                                   :                    :                    :                             +- ColumnarExchange (35)
                                                   :                    :                    :                                +- VeloxResizeBatches (34)
                                                   :                    :                    :                                   +- ^ ProjectExecTransformer (32)
                                                   :                    :                    :                                      +- ^ FilterExecTransformer (31)
                                                   :                    :                    :                                         +- ^ ScanTransformer parquet  (30)
                                                   :                    :                    +- ^ InputIteratorTransformer (58)
                                                   :                    :                       +- VeloxResizeBatches (56)
                                                   :                    :                          +- ShuffleQueryStage (55), Statistics(X)
                                                   :                    :                             +- ColumnarExchange (54)
                                                   :                    :                                +- VeloxResizeBatches (53)
                                                   :                    :                                   +- ^ ProjectExecTransformer (51)
                                                   :                    :                                      +- ^ FilterExecTransformer (50)
                                                   :                    :                                         +- ^ ScanTransformer parquet  (49)
                                                   :                    +- ^ InputIteratorTransformer (77)
                                                   :                       +- VeloxResizeBatches (75)
                                                   :                          +- ShuffleQueryStage (74), Statistics(X)
                                                   :                             +- ColumnarExchange (73)
                                                   :                                +- VeloxResizeBatches (72)
                                                   :                                   +- ^ ProjectExecTransformer (70)
                                                   :                                      +- ^ FilterExecTransformer (69)
                                                   :                                         +- ^ ScanTransformer parquet  (68)
                                                   +- ^ InputIteratorTransformer (96)
                                                      +- VeloxResizeBatches (94)
                                                         +- ShuffleQueryStage (93), Statistics(X)
                                                            +- ColumnarExchange (92)
                                                               +- VeloxResizeBatches (91)
                                                                  +- ^ ProjectExecTransformer (89)
                                                                     +- ^ FilterExecTransformer (88)
                                                                        +- ^ ScanTransformer parquet  (87)
+- == Initial Plan ==
   Sort (167)
   +- Exchange (166)
      +- HashAggregate (165)
         +- Exchange (164)
            +- HashAggregate (163)
               +- Project (162)
                  +- SortMergeJoin Inner (161)
                     :- Sort (155)
                     :  +- Exchange (154)
                     :     +- Project (153)
                     :        +- SortMergeJoin Inner (152)
                     :           :- Sort (147)
                     :           :  +- Exchange (146)
                     :           :     +- Project (145)
                     :           :        +- SortMergeJoin Inner (144)
                     :           :           :- Sort (139)
                     :           :           :  +- Exchange (138)
                     :           :           :     +- Project (137)
                     :           :           :        +- SortMergeJoin Inner (136)
                     :           :           :           :- Sort (131)
                     :           :           :           :  +- Exchange (130)
                     :           :           :           :     +- Project (129)
                     :           :           :           :        +- SortMergeJoin Inner (128)
                     :           :           :           :           :- Sort (122)
                     :           :           :           :           :  +- Exchange (121)
                     :           :           :           :           :     +- Filter (120)
                     :           :           :           :           :        +- Scan parquet (119)
                     :           :           :           :           +- Sort (127)
                     :           :           :           :              +- Exchange (126)
                     :           :           :           :                 +- Project (125)
                     :           :           :           :                    +- Filter (124)
                     :           :           :           :                       +- Scan parquet (123)
                     :           :           :           +- Sort (135)
                     :           :           :              +- Exchange (134)
                     :           :           :                 +- Filter (133)
                     :           :           :                    +- Scan parquet (132)
                     :           :           +- Sort (143)
                     :           :              +- Exchange (142)
                     :           :                 +- Filter (141)
                     :           :                    +- Scan parquet (140)
                     :           +- Sort (151)
                     :              +- Exchange (150)
                     :                 +- Filter (149)
                     :                    +- Scan parquet (148)
                     +- Sort (160)
                        +- Exchange (159)
                           +- Project (158)
                              +- Filter (157)
                                 +- Scan parquet (156)


(1) ScanTransformer parquet 
Output [2]: [c_custkey#X, c_nationkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)]
ReadSchema: struct<c_custkey:bigint,c_nationkey:bigint>

(2) FilterExecTransformer
Input [2]: [c_custkey#X, c_nationkey#X]
Arguments: (isnotnull(c_custkey#X) AND isnotnull(c_nationkey#X))

(3) ProjectExecTransformer
Output [3]: [hash(c_custkey#X, 42) AS hash_partition_key#X, c_custkey#X, c_nationkey#X]
Input [2]: [c_custkey#X, c_nationkey#X]

(4) WholeStageCodegenTransformer (X)
Input [3]: [hash_partition_key#X, c_custkey#X, c_nationkey#X]
Arguments: false

(5) VeloxResizeBatches
Input [3]: [hash_partition_key#X, c_custkey#X, c_nationkey#X]
Arguments: X, X

(6) ColumnarExchange
Input [3]: [hash_partition_key#X, c_custkey#X, c_nationkey#X]
Arguments: hashpartitioning(c_custkey#X, 1), ENSURE_REQUIREMENTS, [c_custkey#X, c_nationkey#X], [plan_id=X], [shuffle_writer_type=hash]

(7) ShuffleQueryStage
Output [2]: [c_custkey#X, c_nationkey#X]
Arguments: X

(8) VeloxResizeBatches
Input [2]: [c_custkey#X, c_nationkey#X]
Arguments: X, X

(9) InputAdapter
Input [2]: [c_custkey#X, c_nationkey#X]

(10) InputIteratorTransformer
Input [2]: [c_custkey#X, c_nationkey#X]

(11) ScanTransformer parquet 
Output [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1994-01-01), LessThan(o_orderdate,1995-01-01), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>

(12) FilterExecTransformer
Input [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]
Arguments: ((((isnotnull(o_orderdate#X) AND (o_orderdate#X >= 1994-01-01)) AND (o_orderdate#X < 1995-01-01)) AND isnotnull(o_custkey#X)) AND isnotnull(o_orderkey#X))

(13) ProjectExecTransformer
Output [3]: [hash(o_custkey#X, 42) AS hash_partition_key#X, o_orderkey#X, o_custkey#X]
Input [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]

(14) WholeStageCodegenTransformer (X)
Input [3]: [hash_partition_key#X, o_orderkey#X, o_custkey#X]
Arguments: false

(15) VeloxResizeBatches
Input [3]: [hash_partition_key#X, o_orderkey#X, o_custkey#X]
Arguments: X, X

(16) ColumnarExchange
Input [3]: [hash_partition_key#X, o_orderkey#X, o_custkey#X]
Arguments: hashpartitioning(o_custkey#X, 1), ENSURE_REQUIREMENTS, [o_orderkey#X, o_custkey#X], [plan_id=X], [shuffle_writer_type=hash]

(17) ShuffleQueryStage
Output [2]: [o_orderkey#X, o_custkey#X]
Arguments: X

(18) VeloxResizeBatches
Input [2]: [o_orderkey#X, o_custkey#X]
Arguments: X, X

(19) InputAdapter
Input [2]: [o_orderkey#X, o_custkey#X]

(20) InputIteratorTransformer
Input [2]: [o_orderkey#X, o_custkey#X]

(21) ShuffledHashJoinExecTransformer
Left keys [1]: [c_custkey#X]
Right keys [1]: [o_custkey#X]
Join condition: None

(22) ProjectExecTransformer
Output [3]: [hash(o_orderkey#X, 42) AS hash_partition_key#X, c_nationkey#X, o_orderkey#X]
Input [4]: [c_custkey#X, c_nationkey#X, o_orderkey#X, o_custkey#X]

(23) WholeStageCodegenTransformer (X)
Input [3]: [hash_partition_key#X, c_nationkey#X, o_orderkey#X]
Arguments: false

(24) VeloxResizeBatches
Input [3]: [hash_partition_key#X, c_nationkey#X, o_orderkey#X]
Arguments: X, X

(25) ColumnarExchange
Input [3]: [hash_partition_key#X, c_nationkey#X, o_orderkey#X]
Arguments: hashpartitioning(o_orderkey#X, 1), ENSURE_REQUIREMENTS, [c_nationkey#X, o_orderkey#X], [plan_id=X], [shuffle_writer_type=hash]

(26) ShuffleQueryStage
Output [2]: [c_nationkey#X, o_orderkey#X]
Arguments: X

(27) VeloxResizeBatches
Input [2]: [c_nationkey#X, o_orderkey#X]
Arguments: X, X

(28) InputAdapter
Input [2]: [c_nationkey#X, o_orderkey#X]

(29) InputIteratorTransformer
Input [2]: [c_nationkey#X, o_orderkey#X]

(30) ScanTransformer parquet 
Output [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(l_orderkey), IsNotNull(l_suppkey)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2)>

(31) FilterExecTransformer
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: (isnotnull(l_orderkey#X) AND isnotnull(l_suppkey#X))

(32) ProjectExecTransformer
Output [5]: [hash(l_orderkey#X, 42) AS hash_partition_key#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(33) WholeStageCodegenTransformer (X)
Input [5]: [hash_partition_key#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: false

(34) VeloxResizeBatches
Input [5]: [hash_partition_key#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X, X

(35) ColumnarExchange
Input [5]: [hash_partition_key#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: hashpartitioning(l_orderkey#X, 1), ENSURE_REQUIREMENTS, [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X], [plan_id=X], [shuffle_writer_type=hash]

(36) ShuffleQueryStage
Output [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X

(37) VeloxResizeBatches
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X, X

(38) InputAdapter
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(39) InputIteratorTransformer
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(40) ShuffledHashJoinExecTransformer
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(41) ProjectExecTransformer
Output [5]: [hash(l_suppkey#X, c_nationkey#X, 42) AS hash_partition_key#X, c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Input [6]: [c_nationkey#X, o_orderkey#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(42) WholeStageCodegenTransformer (X)
Input [5]: [hash_partition_key#X, c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: false

(43) VeloxResizeBatches
Input [5]: [hash_partition_key#X, c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X, X

(44) ColumnarExchange
Input [5]: [hash_partition_key#X, c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: hashpartitioning(l_suppkey#X, c_nationkey#X, 1), ENSURE_REQUIREMENTS, [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X], [plan_id=X], [shuffle_writer_type=hash]

(45) ShuffleQueryStage
Output [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X

(46) VeloxResizeBatches
Input [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: X, X

(47) InputAdapter
Input [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(48) InputIteratorTransformer
Input [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(49) ScanTransformer parquet 
Output [2]: [s_suppkey#X, s_nationkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)]
ReadSchema: struct<s_suppkey:bigint,s_nationkey:bigint>

(50) FilterExecTransformer
Input [2]: [s_suppkey#X, s_nationkey#X]
Arguments: (isnotnull(s_suppkey#X) AND isnotnull(s_nationkey#X))

(51) ProjectExecTransformer
Output [3]: [hash(s_suppkey#X, s_nationkey#X, 42) AS hash_partition_key#X, s_suppkey#X, s_nationkey#X]
Input [2]: [s_suppkey#X, s_nationkey#X]

(52) WholeStageCodegenTransformer (X)
Input [3]: [hash_partition_key#X, s_suppkey#X, s_nationkey#X]
Arguments: false

(53) VeloxResizeBatches
Input [3]: [hash_partition_key#X, s_suppkey#X, s_nationkey#X]
Arguments: X, X

(54) ColumnarExchange
Input [3]: [hash_partition_key#X, s_suppkey#X, s_nationkey#X]
Arguments: hashpartitioning(s_suppkey#X, s_nationkey#X, 1), ENSURE_REQUIREMENTS, [s_suppkey#X, s_nationkey#X], [plan_id=X], [shuffle_writer_type=hash]

(55) ShuffleQueryStage
Output [2]: [s_suppkey#X, s_nationkey#X]
Arguments: X

(56) VeloxResizeBatches
Input [2]: [s_suppkey#X, s_nationkey#X]
Arguments: X, X

(57) InputAdapter
Input [2]: [s_suppkey#X, s_nationkey#X]

(58) InputIteratorTransformer
Input [2]: [s_suppkey#X, s_nationkey#X]

(59) ShuffledHashJoinExecTransformer
Left keys [2]: [l_suppkey#X, c_nationkey#X]
Right keys [2]: [s_suppkey#X, s_nationkey#X]
Join condition: None

(60) ProjectExecTransformer
Output [4]: [hash(s_nationkey#X, 42) AS hash_partition_key#X, l_extendedprice#X, l_discount#X, s_nationkey#X]
Input [6]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X, s_suppkey#X, s_nationkey#X]

(61) WholeStageCodegenTransformer (X)
Input [4]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: false

(62) VeloxResizeBatches
Input [4]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: X, X

(63) ColumnarExchange
Input [4]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: hashpartitioning(s_nationkey#X, 1), ENSURE_REQUIREMENTS, [l_extendedprice#X, l_discount#X, s_nationkey#X], [plan_id=X], [shuffle_writer_type=hash]

(64) ShuffleQueryStage
Output [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: X

(65) VeloxResizeBatches
Input [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: X, X

(66) InputAdapter
Input [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]

(67) InputIteratorTransformer
Input [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]

(68) ScanTransformer parquet 
Output [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string,n_regionkey:bigint>

(69) FilterExecTransformer
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: (isnotnull(n_nationkey#X) AND isnotnull(n_regionkey#X))

(70) ProjectExecTransformer
Output [4]: [hash(n_nationkey#X, 42) AS hash_partition_key#X, n_nationkey#X, n_name#X, n_regionkey#X]
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]

(71) WholeStageCodegenTransformer (X)
Input [4]: [hash_partition_key#X, n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: false

(72) VeloxResizeBatches
Input [4]: [hash_partition_key#X, n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: X, X

(73) ColumnarExchange
Input [4]: [hash_partition_key#X, n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: hashpartitioning(n_nationkey#X, 1), ENSURE_REQUIREMENTS, [n_nationkey#X, n_name#X, n_regionkey#X], [plan_id=X], [shuffle_writer_type=hash]

(74) ShuffleQueryStage
Output [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: X

(75) VeloxResizeBatches
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: X, X

(76) InputAdapter
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]

(77) InputIteratorTransformer
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]

(78) ShuffledHashJoinExecTransformer
Left keys [1]: [s_nationkey#X]
Right keys [1]: [n_nationkey#X]
Join condition: None

(79) ProjectExecTransformer
Output [5]: [hash(n_regionkey#X, 42) AS hash_partition_key#X, l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Input [6]: [l_extendedprice#X, l_discount#X, s_nationkey#X, n_nationkey#X, n_name#X, n_regionkey#X]

(80) WholeStageCodegenTransformer (X)
Input [5]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: false

(81) VeloxResizeBatches
Input [5]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: X, X

(82) ColumnarExchange
Input [5]: [hash_partition_key#X, l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: hashpartitioning(n_regionkey#X, 1), ENSURE_REQUIREMENTS, [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X], [plan_id=X], [shuffle_writer_type=hash]

(83) ShuffleQueryStage
Output [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: X

(84) VeloxResizeBatches
Input [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: X, X

(85) InputAdapter
Input [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]

(86) InputIteratorTransformer
Input [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]

(87) ScanTransformer parquet 
Output [2]: [r_regionkey#X, r_name#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(r_name), EqualTo(r_name,ASIA), IsNotNull(r_regionkey)]
ReadSchema: struct<r_regionkey:bigint,r_name:string>

(88) FilterExecTransformer
Input [2]: [r_regionkey#X, r_name#X]
Arguments: ((isnotnull(r_name#X) AND (r_name#X = ASIA)) AND isnotnull(r_regionkey#X))

(89) ProjectExecTransformer
Output [2]: [hash(r_regionkey#X, 42) AS hash_partition_key#X, r_regionkey#X]
Input [2]: [r_regionkey#X, r_name#X]

(90) WholeStageCodegenTransformer (X)
Input [2]: [hash_partition_key#X, r_regionkey#X]
Arguments: false

(91) VeloxResizeBatches
Input [2]: [hash_partition_key#X, r_regionkey#X]
Arguments: X, X

(92) ColumnarExchange
Input [2]: [hash_partition_key#X, r_regionkey#X]
Arguments: hashpartitioning(r_regionkey#X, 1), ENSURE_REQUIREMENTS, [r_regionkey#X], [plan_id=X], [shuffle_writer_type=hash]

(93) ShuffleQueryStage
Output [1]: [r_regionkey#X]
Arguments: X

(94) VeloxResizeBatches
Input [1]: [r_regionkey#X]
Arguments: X, X

(95) InputAdapter
Input [1]: [r_regionkey#X]

(96) InputIteratorTransformer
Input [1]: [r_regionkey#X]

(97) ShuffledHashJoinExecTransformer
Left keys [1]: [n_regionkey#X]
Right keys [1]: [r_regionkey#X]
Join condition: None

(98) ProjectExecTransformer
Output [2]: [n_name#X, CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)) AS _pre_X#X]
Input [5]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X, r_regionkey#X]

(99) FlushableHashAggregateExecTransformer
Input [2]: [n_name#X, _pre_X#X]
Keys [1]: [n_name#X]
Functions [1]: [partial_sum(_pre_X#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [3]: [n_name#X, sum#X, isEmpty#X]

(100) ProjectExecTransformer
Output [4]: [hash(n_name#X, 42) AS hash_partition_key#X, n_name#X, sum#X, isEmpty#X]
Input [3]: [n_name#X, sum#X, isEmpty#X]

(101) WholeStageCodegenTransformer (X)
Input [4]: [hash_partition_key#X, n_name#X, sum#X, isEmpty#X]
Arguments: false

(102) VeloxResizeBatches
Input [4]: [hash_partition_key#X, n_name#X, sum#X, isEmpty#X]
Arguments: X, X

(103) ColumnarExchange
Input [4]: [hash_partition_key#X, n_name#X, sum#X, isEmpty#X]
Arguments: hashpartitioning(n_name#X, 1), ENSURE_REQUIREMENTS, [n_name#X, sum#X, isEmpty#X], [plan_id=X], [shuffle_writer_type=hash]

(104) ShuffleQueryStage
Output [3]: [n_name#X, sum#X, isEmpty#X]
Arguments: X

(105) VeloxResizeBatches
Input [3]: [n_name#X, sum#X, isEmpty#X]
Arguments: X, X

(106) InputAdapter
Input [3]: [n_name#X, sum#X, isEmpty#X]

(107) InputIteratorTransformer
Input [3]: [n_name#X, sum#X, isEmpty#X]

(108) RegularHashAggregateExecTransformer
Input [3]: [n_name#X, sum#X, isEmpty#X]
Keys [1]: [n_name#X]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#X]
Results [2]: [n_name#X, sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#X AS revenue#X]

(109) WholeStageCodegenTransformer (X)
Input [2]: [n_name#X, revenue#X]
Arguments: false

(110) VeloxResizeBatches
Input [2]: [n_name#X, revenue#X]
Arguments: X, X

(111) ColumnarExchange
Input [2]: [n_name#X, revenue#X]
Arguments: rangepartitioning(revenue#X DESC NULLS LAST, 1), ENSURE_REQUIREMENTS, [plan_id=X], [shuffle_writer_type=hash]

(112) ShuffleQueryStage
Output [2]: [n_name#X, revenue#X]
Arguments: X

(113) VeloxResizeBatches
Input [2]: [n_name#X, revenue#X]
Arguments: X, X

(114) InputAdapter
Input [2]: [n_name#X, revenue#X]

(115) InputIteratorTransformer
Input [2]: [n_name#X, revenue#X]

(116) SortExecTransformer
Input [2]: [n_name#X, revenue#X]
Arguments: [revenue#X DESC NULLS LAST], true, 0

(117) WholeStageCodegenTransformer (X)
Input [2]: [n_name#X, revenue#X]
Arguments: false

(118) VeloxColumnarToRow
Input [2]: [n_name#X, revenue#X]

(119) Scan parquet
Output [2]: [c_custkey#X, c_nationkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)]
ReadSchema: struct<c_custkey:bigint,c_nationkey:bigint>

(120) Filter
Input [2]: [c_custkey#X, c_nationkey#X]
Condition : (isnotnull(c_custkey#X) AND isnotnull(c_nationkey#X))

(121) Exchange
Input [2]: [c_custkey#X, c_nationkey#X]
Arguments: hashpartitioning(c_custkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(122) Sort
Input [2]: [c_custkey#X, c_nationkey#X]
Arguments: [c_custkey#X ASC NULLS FIRST], false, 0

(123) Scan parquet
Output [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1994-01-01), LessThan(o_orderdate,1995-01-01), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>

(124) Filter
Input [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]
Condition : ((((isnotnull(o_orderdate#X) AND (o_orderdate#X >= 1994-01-01)) AND (o_orderdate#X < 1995-01-01)) AND isnotnull(o_custkey#X)) AND isnotnull(o_orderkey#X))

(125) Project
Output [2]: [o_orderkey#X, o_custkey#X]
Input [3]: [o_orderkey#X, o_custkey#X, o_orderdate#X]

(126) Exchange
Input [2]: [o_orderkey#X, o_custkey#X]
Arguments: hashpartitioning(o_custkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(127) Sort
Input [2]: [o_orderkey#X, o_custkey#X]
Arguments: [o_custkey#X ASC NULLS FIRST], false, 0

(128) SortMergeJoin
Left keys [1]: [c_custkey#X]
Right keys [1]: [o_custkey#X]
Join condition: None

(129) Project
Output [2]: [c_nationkey#X, o_orderkey#X]
Input [4]: [c_custkey#X, c_nationkey#X, o_orderkey#X, o_custkey#X]

(130) Exchange
Input [2]: [c_nationkey#X, o_orderkey#X]
Arguments: hashpartitioning(o_orderkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(131) Sort
Input [2]: [c_nationkey#X, o_orderkey#X]
Arguments: [o_orderkey#X ASC NULLS FIRST], false, 0

(132) Scan parquet
Output [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(l_orderkey), IsNotNull(l_suppkey)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2)>

(133) Filter
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Condition : (isnotnull(l_orderkey#X) AND isnotnull(l_suppkey#X))

(134) Exchange
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: hashpartitioning(l_orderkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(135) Sort
Input [4]: [l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: [l_orderkey#X ASC NULLS FIRST], false, 0

(136) SortMergeJoin
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(137) Project
Output [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Input [6]: [c_nationkey#X, o_orderkey#X, l_orderkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]

(138) Exchange
Input [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: hashpartitioning(l_suppkey#X, c_nationkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(139) Sort
Input [4]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X]
Arguments: [l_suppkey#X ASC NULLS FIRST, c_nationkey#X ASC NULLS FIRST], false, 0

(140) Scan parquet
Output [2]: [s_suppkey#X, s_nationkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)]
ReadSchema: struct<s_suppkey:bigint,s_nationkey:bigint>

(141) Filter
Input [2]: [s_suppkey#X, s_nationkey#X]
Condition : (isnotnull(s_suppkey#X) AND isnotnull(s_nationkey#X))

(142) Exchange
Input [2]: [s_suppkey#X, s_nationkey#X]
Arguments: hashpartitioning(s_suppkey#X, s_nationkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(143) Sort
Input [2]: [s_suppkey#X, s_nationkey#X]
Arguments: [s_suppkey#X ASC NULLS FIRST, s_nationkey#X ASC NULLS FIRST], false, 0

(144) SortMergeJoin
Left keys [2]: [l_suppkey#X, c_nationkey#X]
Right keys [2]: [s_suppkey#X, s_nationkey#X]
Join condition: None

(145) Project
Output [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]
Input [6]: [c_nationkey#X, l_suppkey#X, l_extendedprice#X, l_discount#X, s_suppkey#X, s_nationkey#X]

(146) Exchange
Input [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: hashpartitioning(s_nationkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(147) Sort
Input [3]: [l_extendedprice#X, l_discount#X, s_nationkey#X]
Arguments: [s_nationkey#X ASC NULLS FIRST], false, 0

(148) Scan parquet
Output [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(n_nationkey), IsNotNull(n_regionkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string,n_regionkey:bigint>

(149) Filter
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Condition : (isnotnull(n_nationkey#X) AND isnotnull(n_regionkey#X))

(150) Exchange
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: hashpartitioning(n_nationkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(151) Sort
Input [3]: [n_nationkey#X, n_name#X, n_regionkey#X]
Arguments: [n_nationkey#X ASC NULLS FIRST], false, 0

(152) SortMergeJoin
Left keys [1]: [s_nationkey#X]
Right keys [1]: [n_nationkey#X]
Join condition: None

(153) Project
Output [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Input [6]: [l_extendedprice#X, l_discount#X, s_nationkey#X, n_nationkey#X, n_name#X, n_regionkey#X]

(154) Exchange
Input [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: hashpartitioning(n_regionkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(155) Sort
Input [4]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X]
Arguments: [n_regionkey#X ASC NULLS FIRST], false, 0

(156) Scan parquet
Output [2]: [r_regionkey#X, r_name#X]
Batched: true
Location: InMemoryFileIndex [*]
PushedFilters: [IsNotNull(r_name), EqualTo(r_name,ASIA), IsNotNull(r_regionkey)]
ReadSchema: struct<r_regionkey:bigint,r_name:string>

(157) Filter
Input [2]: [r_regionkey#X, r_name#X]
Condition : ((isnotnull(r_name#X) AND (r_name#X = ASIA)) AND isnotnull(r_regionkey#X))

(158) Project
Output [1]: [r_regionkey#X]
Input [2]: [r_regionkey#X, r_name#X]

(159) Exchange
Input [1]: [r_regionkey#X]
Arguments: hashpartitioning(r_regionkey#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(160) Sort
Input [1]: [r_regionkey#X]
Arguments: [r_regionkey#X ASC NULLS FIRST], false, 0

(161) SortMergeJoin
Left keys [1]: [n_regionkey#X]
Right keys [1]: [r_regionkey#X]
Join condition: None

(162) Project
Output [3]: [l_extendedprice#X, l_discount#X, n_name#X]
Input [5]: [l_extendedprice#X, l_discount#X, n_name#X, n_regionkey#X, r_regionkey#X]

(163) HashAggregate
Input [3]: [l_extendedprice#X, l_discount#X, n_name#X]
Keys [1]: [n_name#X]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [3]: [n_name#X, sum#X, isEmpty#X]

(164) Exchange
Input [3]: [n_name#X, sum#X, isEmpty#X]
Arguments: hashpartitioning(n_name#X, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(165) HashAggregate
Input [3]: [n_name#X, sum#X, isEmpty#X]
Keys [1]: [n_name#X]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#X]
Results [2]: [n_name#X, sum(CheckOverflow((promote_precision(cast(l_extendedprice#X as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#X as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#X AS revenue#X]

(166) Exchange
Input [2]: [n_name#X, revenue#X]
Arguments: rangepartitioning(revenue#X DESC NULLS LAST, 1), ENSURE_REQUIREMENTS, [plan_id=X]

(167) Sort
Input [2]: [n_name#X, revenue#X]
Arguments: [revenue#X DESC NULLS LAST], true, 0

(168) AdaptiveSparkPlan
Output [2]: [n_name#X, revenue#X]
Arguments: isFinalPlan=true